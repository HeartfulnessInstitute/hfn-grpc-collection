/**
 * @author : Godwin Vinny Carole Kati
 * @created : 22/01/2021, Friday 01:29
 * @organisation : Codeprism Technologies Pvt Ltd
**/

syntax = 'proto3';

package unifiedplatform.guidedMeditation;


option java_package = "org.heartfulness.unifiedplatform.guidedmeditation";
option java_multiple_files = true;
import 'common/common.proto';
message Test {
  string result = 1;
}

message Empty {
}

message TestResponse {
  Test test = 1;
}

message SelectMeditationFiles {
  string purpose = 1;
  uint32 duration = 2;
  heartintune.common.UserType userType = 3;
  heartintune.common.MeditationType meditationType = 4;
}

message MeditationFile {
  int64 id = 1;
  heartintune.common.MeditationType meditationType = 2;
  string title = 3;
  string subTitle = 4;
  string description = 5;
  uint32 durationOfMeditationClip = 6;
  string tag = 7;
  float rating = 8;
  uint32 likes = 9;
  string audioUrl = 10;
  string imageUrl = 11;
  DurationFile durationFile = 12;
  PurposeFile purposeFile = 13;
  string thumbnailImgUrl = 14;
  string audioUrlV2 = 15;
  uint32 durationOfInstructionClip = 16;
  string backgroundImageUrl = 17;
  repeated Tag tags = 18;
  repeated int64 tagIds = 19;
  string attribute = 20;
  heartintune.common.MeditationCategory meditationCategory = 21;
}

message AddMeditationFileRequest {
  heartintune.common.MeditationType meditationType = 1;
  string title = 2;
  string subTitle = 3;
  string description = 4;
  uint32 durationOfMeditationClip = 5;
  string tag = 6;
  float rating = 7;
  uint32 likes = 8;
  string audioUrl = 9;
  string imageUrl = 10;
  int64 purposeFileID = 11;
  int64 durationFileID = 12;
  repeated Tag tags = 13;
}

message PurposeFile {
  int64 id = 1;
  string purpose = 2;
  string imageURL = 3;
  string withoutBorderImageUrl = 4;
}

message DurationFile {
  int64 id = 1;
  int32 durationInSeconds = 2;
  string imageURL = 3;
  string selectedImageURL = 4;
}
message AddPurposeFileRequest {
  string purpose = 1;
  string imageURL = 2;
}

message AddDurationFileRequest {
  int32 durationInSeconds = 1;
  string imageURL = 2;
  string selectedImageURL = 3;
}
message SelectedFiles {
  repeated MeditationFile selectedMeditationFile = 1;
  uint32 selectedPageSize = 2;
  uint32 selectedPageNumber = 3;
  int64 totalCount = 4;
}

message ResponseAllPurposeFiles {
  repeated PurposeFile listOfPurposeFile = 1;
}


message ResponseAllDurationFiles {
  repeated DurationFile listOfDurationFiles = 1;
}

message MeditationFileAndUserID {
  int64 meditationFileID = 1;
  int64 userID = 2;
}

message ID {
  int64 ID = 1;
}

message ResponseStatus {
  bool statusSuccess = 1;
}

message DeleteMeditationFileByIdResponse {
  string message = 1;
  MeditationFile meditationFile = 2;
}

message DeletePurposeFileByIdResponse {
  string message = 1;
  PurposeFile PurposeFile = 2;
}

message AddMeditationFileDetailsRequest {
  heartintune.common.MeditationType meditationType = 1;
  heartintune.common.Locale title = 2;
  heartintune.common.Locale subTitle = 3;
  heartintune.common.Locale description = 4;
  uint32 durationOfMeditationClip = 5;
  string tag = 6;
  float rating = 7;
  uint32 likes = 8;
  heartintune.common.Locale audioUrl = 9;
  heartintune.common.Locale imageUrl = 10;
  int64 purposeFileID = 11;
  int64 durationFileID = 12;
  heartintune.common.Locale thumbnailImgUrl = 13;
  repeated  Tag tags = 14;
  repeated int64 tagIds = 15;
  heartintune.common.Locale attribute = 16;
}

message MeditationFileDetails {
  int64 id = 1;
  heartintune.common.MeditationType meditationType = 2;
  heartintune.common.Locale title = 3;
  heartintune.common.Locale subTitle = 4;
  heartintune.common.Locale description = 5;
  uint32 durationOfMeditationClip = 6;
  string tag = 7;
  float rating = 8;
  uint32 likes = 9;
  heartintune.common.Locale audioUrl = 10;
  heartintune.common.Locale imageUrl = 11;
  heartintune.common.Locale thumbnailImgUrl = 12;
  int64 purposeFileID = 13;
  int64 durationFileID = 14;
  repeated Tag tags = 15;
  repeated int64 tagIds = 16;
  heartintune.common.Locale attribute = 17;
  heartintune.common.MeditationCategory meditationCategory = 21;
}

message SelectedFileDetailsResponse{
  repeated MeditationFile meditationFileDetailsResponse = 1;
}
message MeditationFileDetailsResponse{
  int64 id = 1;
  heartintune.common.MeditationType meditationType = 2;
  string title = 3;
  string subTitle = 4;
  string description = 5;
  uint32 durationOfMeditationClip = 6;
  string tag = 7;
  float rating = 8;
  uint32 likes = 9;
  string audioUrl = 10;
  string imageUrl = 11;
  string thumbnailImgUrl = 12;
}

message SelectedMeditationFiles {
  repeated MeditationFileDetails selectedMeditationFile = 1;
  uint32 selectedPageSize = 2;
  uint32 selectedPageNumber = 3;
  int64 totalCount = 4;
}

message DeleteMeditationFileDetailsByIdResponse {
  string message = 1;
  MeditationFileDetails meditationFile = 2;
}

message AddPurposeFileDetailsRequest {
  heartintune.common.Locale purpose = 1;
  string imageURL = 2;
  string withoutBorderImageUrl = 3;
}

message PurposeFileDetails {
  int64 id = 1;
  heartintune.common.Locale purpose = 2;
  string imageURL = 3;
  string withoutBorderImageUrl = 4;
}
message PurposeFileDetailsResponse {
  int64 id = 1;
  string purpose = 2;
  string imageURL = 3;
}

message AddDurationFileDetailsRequest {
  int32 durationInSeconds = 1;
  string imageURL = 2;
  string selectedImageURL = 3;
}

message DurationFileDetails {
  int64 id = 1;
  int32 durationInSeconds = 2;
  string imageURL = 3;
  string selectedImageURL = 4;
}

message SelectMeditationFileDetails {
  int64 purpose = 1;
  uint32 duration = 2;
  heartintune.common.UserType userType = 3;
  heartintune.common.MeditationType meditationType = 4;
  heartintune.common.LocaleType selectedLanguage = 5;
  bool isRequestComingFromV2 = 6;
}

message SelectedFileDetails {//TODO we are not using this message in req and res proto
  repeated MeditationFileDetails selectedMeditationFile = 1;
}

message DeletePurposeFileDetailByIdResponse {
  string message = 1;
  PurposeFile PurposeFile = 2;
}

message ResponseAllPurposeFilesDetails {
  repeated PurposeFileDetailsResponse listOfPurposeFile = 1;
}

message ResponseAllDurationFilesDetails {
  repeated DurationFile listOfDurationFiles = 1;
}

message RequestGetAllPurpose{
  heartintune.common.UserType userType = 1;
}
message RequestGetAllPurposeFileDetails{
  heartintune.common.UserType userType = 1;
  heartintune.common.LocaleType selectedLanguage = 2;
}
message RequestPageable{
  uint32 pageSize = 1;
  uint32 pageNumber = 2;
}
message RequestForGetMeditationFileDetailsWithSelectedLanguage{
  int64 id = 1;
  heartintune.common.LocaleType selectedLanguage = 2;
  RequestPageable requestPageable = 3;
}

message RequestForGetAllMeditationFiles{
  RequestPageable requestPageable = 1;
  heartintune.common.MeditationType meditationType = 2;
  heartintune.common.MeditationCategory mediationCategory = 4;
  heartintune.common.LocaleType selectedLanguage = 5;
  bool category = 6;
}
message LocalType{
  heartintune.common.LocaleType selectedLanguage = 1;
}
message RequestForGetMeditationFileDetails{
  RequestPageable requestPageable = 1;
  heartintune.common.LocaleType selectedLanguage = 2;
  heartintune.common.UserType userType = 3;
}
message SelectedFileDetailsResponseV2{
  repeated MeditationFileV2 meditationFileV2DetailsResponse = 1;
  repeated MeditationFileDetailsV2 meditationFileDetailsV2 = 2;
  uint32 selectedPageSize = 3;
  uint32 selectedPageNumber = 4;
  int64 totalCount = 5;
}
message AddMeditationFileDetailsRequestV2 {
  heartintune.common.MeditationType meditationType = 1;
  heartintune.common.Locale title = 2;
  heartintune.common.Locale subTitle = 3;
  heartintune.common.Locale description = 4;
  uint32 durationOfMeditationClip = 5;
  string tag = 6;
  float rating = 7;
  uint32 likes = 8;
  heartintune.common.Locale audioUrl = 9;
  heartintune.common.Locale imageUrl = 10;
  int64 purposeFileID = 11;
  int64 durationFileID = 12;
  heartintune.common.Locale thumbnailImgUrl = 13;
  uint32 durationOfInstructionClip = 14;
  heartintune.common.Locale audioUrlV2 = 15;
  string backgroundImageUrl = 16;
  repeated Tag tags = 17;
  heartintune.common.Locale attribute = 18;
  heartintune.common.MeditationCategory meditationCategory = 19;
}
message MeditationFileDetailsV2 {
  int64 id = 1;
  heartintune.common.MeditationType meditationType = 2;
  heartintune.common.Locale title = 3;
  heartintune.common.Locale subTitle = 4;
  heartintune.common.Locale description = 5;
  uint32 durationOfMeditationClip = 6;
  string tag = 7;
  float rating = 8;
  uint32 likes = 9;
  heartintune.common.Locale audioUrl = 10;
  heartintune.common.Locale imageUrl = 11;
  heartintune.common.Locale thumbnailImgUrl = 12;
  int64 purposeFileID = 13;
  int64 durationFileID = 14;
  uint32 durationOfInstructionClip = 15;
  heartintune.common.Locale audioUrlV2 = 16;
  string backgroundImageUrl = 17;
  repeated Tag tags = 18;
  repeated int64 tagIds = 19;
  heartintune.common.Locale attribute = 20;
  heartintune.common.MeditationCategory meditationCategory = 21;
}
message MeditationFileV2 {
  int64 id = 1;
  heartintune.common.MeditationType meditationType = 2;
  string title = 3;
  string subTitle = 4;
  string description = 5;
  uint32 durationOfMeditationClip = 6;
  string tag = 7;
  float rating = 8;
  uint32 likes = 9;
  string audioUrl = 10;
  string imageUrl = 11;
  DurationFile durationFile = 12;
  PurposeFile purposeFile = 13;
  string thumbnailImgUrl = 14;
  uint32 durationOfInstructionClip = 15;
  string audioUrlV2 = 16;
  string backgroundImageUrl = 17;
  repeated Tag tags = 18;
  repeated int64 tagIds = 19;
  string attribute = 20;
  heartintune.common.MeditationCategory meditationCategory = 21;
}
message URLRequest{
  string url = 1;
  heartintune.common.BackGroundType backGroundType = 2;
  heartintune.common.Locale title = 3;
  string thumbnailImgUrl = 4;
}
message MeditaionBckgndDetails{
  int64 id = 1;
  string url = 2;
  heartintune.common.BackGroundType backGroundType = 3;
  heartintune.common.Locale title = 4;
  string thumbnailImgUrl = 5;
}

message MeditaionBckgndDetailsLocale{
  int64 id = 1;
  string url = 2;
  heartintune.common.BackGroundType backGroundType = 3;
  string title = 4;
  string thumbnailImgUrl = 5;
}

message ListOfSelectedMeditaionBckgndDetails{
  repeated MeditaionBckgndDetails meditaionBckgndImg = 1;
  repeated MeditaionBckgndDetails meditaionBckgndMusic = 2;
}

message ListOfSelectedMeditaionBckgndDetailsLocale{
  repeated MeditaionBckgndDetailsLocale meditaionBckgndImg = 1;
  repeated MeditaionBckgndDetailsLocale meditaionBckgndMusic = 2;
}

message SelectedMeditaionBckgndDetailsRequest{
  bool getOnlyImage = 1; //This selected BackGroundType
  bool getOnlyMusic = 2;
  heartintune.common.LocaleType selectedLanguage = 3;
}


message ResponsePageable{
  int64 totalCount = 1;
  uint32 selectedPageSize = 2;
  uint32 selectedPageNumber = 3;
}
message Tag{
  int64 id = 1;
  string name = 2;
}
message TagWithMeditation{
  int64 id = 1;
  string name = 2;
  repeated MeditationFileV2 contents = 3;
}
message TagsList{
  repeated Tag tags = 1;
  ResponsePageable pageable = 2;
}
message TagsRequest{
  repeated Tag tags = 1;
}

message RecentlyPracticedMeditationsByUserRequest{
  int64 userId = 1;
  heartintune.common.MeditationType meditationType = 2;
  heartintune.common.LocaleType selectedLanguage = 3;
  RequestPageable requestPageable = 4;
  string firebaseId = 5;
}


service GuidedMeditationService {
  rpc Test (Empty) returns (TestResponse) {};
  rpc GetMeditationFiles (SelectMeditationFiles) returns (SelectedFiles) {};
  rpc GetAllMeditationFiles(RequestPageable) returns (SelectedFiles) {};
  rpc addMeditationFile (AddMeditationFileRequest) returns (MeditationFile) {}; //returns new DB entry with id
  rpc updateMeditationFile (MeditationFile) returns (MeditationFile) {}; //returns new DB entry with id
  rpc deleteMeditationFileByID (ID) returns (DeleteMeditationFileByIdResponse) {}; //returns new DB entry with id
  rpc updatePurposeFile (PurposeFile) returns (PurposeFile) {} ;
  rpc deletePurposeByID (ID) returns (DeletePurposeFileByIdResponse) {};
  rpc MarkFavourite (MeditationFileAndUserID) returns (ResponseStatus) {};
  rpc GetMeditationFilesByID (ID) returns(SelectedFiles) {};
  rpc GetMeditationById(ID) returns(MeditationFile){};
  rpc addPurposeFile (AddPurposeFileRequest) returns (PurposeFile) {} ;
  rpc getPurposeFile (ID) returns (PurposeFile) {};
  rpc getAllPurposeFile(RequestGetAllPurpose) returns (ResponseAllPurposeFiles) {};
  rpc addDurationFile (AddDurationFileRequest) returns (DurationFile) {};
  rpc updateDurationFile (DurationFile) returns (DurationFile) {};
  rpc getDurationFile (ID) returns (DurationFile) {};
  rpc getAllDurationFile(Empty) returns (ResponseAllDurationFiles) {};

  rpc addMeditationFileDetails (AddMeditationFileDetailsRequest) returns (MeditationFileDetails) {}; //returns new DB entry with id
  rpc updateMeditationFileDetails (MeditationFileDetails) returns (MeditationFileDetails) {}; //returns new DB entry with id
  rpc getAllMeditationFileDetails (RequestForGetAllMeditationFiles) returns (SelectedMeditationFiles) {}; //returns new DB entry with id
  rpc deleteMeditationFileDetailsByID (ID) returns (DeleteMeditationFileDetailsByIdResponse) {}; //returns new DB entry with id
  rpc GetMeditationFileDetailsById(RequestForGetMeditationFileDetailsWithSelectedLanguage) returns(MeditationFile){};
  rpc GetMeditationFilesDetails (SelectMeditationFileDetails) returns (SelectedFileDetailsResponse) {};

  rpc addPurposeFileDetails (AddPurposeFileDetailsRequest) returns (PurposeFileDetails) {} ;
  rpc getPurposeFileDetailsById (ID) returns (PurposeFileDetails) {};
  rpc updatePurposeFileDetails (PurposeFileDetails) returns (PurposeFileDetails) {} ;
  rpc deletePurposeDetailsByID (ID) returns (DeletePurposeFileDetailByIdResponse) {};
  rpc getAllPurposeFileDetails(RequestGetAllPurposeFileDetails) returns (ResponseAllPurposeFiles) {};

  rpc addDurationFileDetails (AddDurationFileDetailsRequest) returns (DurationFile) {};
  rpc UpdateDurationFileDetails (DurationFile) returns (DurationFile) {};
  rpc getDurationFileDetailsById (ID) returns (DurationFile) {};
  rpc getAllDurationFileDetails(Empty) returns (ResponseAllDurationFilesDetails) {};
  rpc DeleteDurationFileDetailsById(ID) returns (ResponseStatus);
  rpc getGuidedMeditationFileDetailsV2(LocalType) returns (SelectedFileDetailsResponse) {};
  rpc getPurposeMeditationFileDetailsByPageableV2(RequestForGetMeditationFileDetails) returns (SelectedFileDetailsResponseV2) {};
  rpc addMeditationFileDetailsV2(AddMeditationFileDetailsRequestV2) returns (MeditationFileDetailsV2) {};
  rpc updateMeditationFileDetailsV2 (MeditationFileDetailsV2) returns (MeditationFileDetailsV2) {};
  rpc GetAllMeditationFileDetailsV2(RequestForGetAllMeditationFiles) returns  (SelectedFileDetailsResponseV2) {};

  rpc addMeditationBckgnd(URLRequest) returns(ResponseStatus) {};
  rpc getMeditationBckgndById(ID) returns(MeditaionBckgndDetails) {};
  rpc updateMeditationBckgnd(MeditaionBckgndDetails) returns(MeditaionBckgndDetails) {};
  rpc deleteMeditationBckgnd(ID) returns(ResponseStatus) {};
  rpc getAllMeditationBckgnd(SelectedMeditaionBckgndDetailsRequest) returns(ListOfSelectedMeditaionBckgndDetails){};
  rpc getAllMeditationBckgndWithSelectedLanguage(SelectedMeditaionBckgndDetailsRequest) returns(ListOfSelectedMeditaionBckgndDetailsLocale){};

  rpc CreateOrUpdateMeditationTags(Tag) returns (Tag){};
  rpc GetAllMeditationTags(RequestPageable) returns(TagsList){};
  rpc GetMeditationByTagId(Tag) returns(TagWithMeditation){};
  rpc AddOrUpdateMultipleTags(TagsRequest)returns(TagsRequest){};

  rpc GetAllMeditationCount(RequestForGetAllMeditationFiles) returns(ResponsePageable){};
  rpc GetListOfMeditationFileByPurposeCategory(RequestForGetMeditationFileDetailsWithSelectedLanguage) returns (SelectedFileDetailsResponseV2) {};
  rpc FetchRecentlyPracticedMeditationsByUser(RecentlyPracticedMeditationsByUserRequest) returns (SelectedFileDetailsResponseV2) {};

}